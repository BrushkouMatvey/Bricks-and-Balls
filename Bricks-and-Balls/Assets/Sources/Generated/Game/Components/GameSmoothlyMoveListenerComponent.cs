//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SmoothlyMoveListenerComponent smoothlyMoveListener { get { return (SmoothlyMoveListenerComponent)GetComponent(GameComponentsLookup.SmoothlyMoveListener); } }
    public bool hasSmoothlyMoveListener { get { return HasComponent(GameComponentsLookup.SmoothlyMoveListener); } }

    public void AddSmoothlyMoveListener(System.Collections.Generic.List<ISmoothlyMoveListener> newValue) {
        var index = GameComponentsLookup.SmoothlyMoveListener;
        var component = (SmoothlyMoveListenerComponent)CreateComponent(index, typeof(SmoothlyMoveListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceSmoothlyMoveListener(System.Collections.Generic.List<ISmoothlyMoveListener> newValue) {
        var index = GameComponentsLookup.SmoothlyMoveListener;
        var component = (SmoothlyMoveListenerComponent)CreateComponent(index, typeof(SmoothlyMoveListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveSmoothlyMoveListener() {
        RemoveComponent(GameComponentsLookup.SmoothlyMoveListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSmoothlyMoveListener;

    public static Entitas.IMatcher<GameEntity> SmoothlyMoveListener {
        get {
            if (_matcherSmoothlyMoveListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SmoothlyMoveListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSmoothlyMoveListener = matcher;
            }

            return _matcherSmoothlyMoveListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddSmoothlyMoveListener(ISmoothlyMoveListener value) {
        var listeners = hasSmoothlyMoveListener
            ? smoothlyMoveListener.value
            : new System.Collections.Generic.List<ISmoothlyMoveListener>();
        listeners.Add(value);
        ReplaceSmoothlyMoveListener(listeners);
    }

    public void RemoveSmoothlyMoveListener(ISmoothlyMoveListener value, bool removeComponentWhenEmpty = true) {
        var listeners = smoothlyMoveListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveSmoothlyMoveListener();
        } else {
            ReplaceSmoothlyMoveListener(listeners);
        }
    }
}
