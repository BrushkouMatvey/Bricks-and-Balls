//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public BorderRotation borderRotation { get { return (BorderRotation)GetComponent(GameComponentsLookup.BorderRotation); } }
    public bool hasBorderRotation { get { return HasComponent(GameComponentsLookup.BorderRotation); } }

    public void AddBorderRotation(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.BorderRotation;
        var component = (BorderRotation)CreateComponent(index, typeof(BorderRotation));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceBorderRotation(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.BorderRotation;
        var component = (BorderRotation)CreateComponent(index, typeof(BorderRotation));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveBorderRotation() {
        RemoveComponent(GameComponentsLookup.BorderRotation);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherBorderRotation;

    public static Entitas.IMatcher<GameEntity> BorderRotation {
        get {
            if (_matcherBorderRotation == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.BorderRotation);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherBorderRotation = matcher;
            }

            return _matcherBorderRotation;
        }
    }
}
